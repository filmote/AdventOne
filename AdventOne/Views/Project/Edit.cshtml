@model AdventOne.Models.Project

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Project</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <table width="100%">
            <tr>
                <td valign="top">
                    <div class="form-group">
                        @Html.LabelFor(model => model.EmployeeID, "EmployeeID", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("EmployeeID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CustomerID, "CustomerID", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("CustomerID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ProjectName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ProjectName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProjectName, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.InvoiceDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.InvoiceDate,
                                new {
                                        htmlAttributes = new {
                                    @Value = DateTime.Now.ToString("dd/MM/yyyy"),
                                    @class = "form-control"
                                        },
                                    })
                            @Html.ValidationMessageFor(model => model.InvoiceDate, "", new { @class = "text-danger" })

                        </div>
                    </div>

                </td>
                <td valign="top">
                    <div class="form-group">
                        @Html.LabelFor(model => model.SalesStage, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EnumDropDownListFor(model => model.SalesStage, "Select an Item", new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ProjectStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EnumDropDownListFor(model => model.ProjectStatus, "Select an Item", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ProjectStatus, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Division, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EnumDropDownListFor(model => model.Division, "Select an Item", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Division, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EnumDropDownListFor(model => model.Location, "Select an Item", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Branch, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EnumDropDownListFor(model => model.Branch, "Select an Item", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Branch, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PaymentTermID, "PaymentTermID", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("PaymentTermID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.PaymentTermID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </td>
            </tr>
        </table>

        <div class="form-group">
            <div class="col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
                &nbsp;|&nbsp;
                <a href="@ViewBag.ReturnURL">
                    <i class="fa fa-caret-square-o-left"></i>
                </a>
                @Html.ActionLink("Back to previous page", null, null, null, new { href = ViewBag.ReturnURL })
            </div>
        </div>
    </div>
}


@section Scripts {

    <script type="text/javascript">

        $("document").ready(function () {
            var selectedText = $("#RevenueType option:selected").text();
            if (selectedText == "REV" || selectedText == "COS") {
                $("#productDiv").show();
                $("#servicesDiv").hide();
            }
            if (selectedText == "SVC") {
                $("#productDiv").hide();
                $("#servicesDiv").show();
            }

        });

        $(function () {

            $('#InvoiceDate').datetimepicker({
                format: 'DD/MM/YYYY',
                showClose: true,
                showClear: true,
                showTodayButton: true,
                toolbarPlacement: 'top'
            });
        });

        $("#CustomerID").change(function () {
            debugger;
            var id = $("#CustomerID").val();
            $.ajax({
                type: "GET",
                url: "/Customer/GetPaymentTerms",
                contentType: "application/json; charset=utf-8",
                data: { "Id": id },
                datatype: "json",
                success: function (data) {
                    var parsedData = JSON.parse(data);
                    $("#PaymentTermID").val(parsedData['id']);
                },
                error: function () {
                    debugger;
                    alert("Dynamic content load failed.");
                }
            });
            
        });

    </script>


}
